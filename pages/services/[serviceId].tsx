import { useRouter } from 'next/router'
import Head from 'next/head'
import { Container } from 'react-bootstrap';
import { CONTEXT_KEYS, SECTION_BACKGROUND, SECTION_NUMBER } from '../../src/enum';
import { SECTION_TITLES } from '../../src/constants/sectionTitles';
import Page from '../../src/components/Page';
import Cases from '../../src/sections/Cases';
import Sanity from '../../src/sanity'
import SANITY_QUERY from '../../src/sanity/queries';
import Context from '../../src/services/Context'
import { SERVICE_TYPE } from '../../src/enum'
import ServiceDescription from '../../src/components/Service/ServiceDescription'
import Link from 'next/link'
import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'
import { faChevronLeft } from '@fortawesome/free-solid-svg-icons'

export async function getServerSideProps() {
  const fetchAwsMedia = Sanity.fetch(SANITY_QUERY.GET_AWS_MEDIA)
  const fetchServices = Sanity.fetch(SANITY_QUERY.GET_SERVICES)
  const fetchProjects = Sanity.fetch(SANITY_QUERY.GET_PROJECTS)

  const [awsMedia, services, projects] = await Promise.all([
    fetchAwsMedia,
    fetchServices,
    fetchProjects,
  ]);
  return { props: { awsMedia, services, projects } };
}

const Service = ({
  awsMedia,
  services,
  projects,
}: any) => {
  const router = useRouter()
  const { serviceId } = router.query

  const getSectionTitleByService = (serviceId: string) => {
    switch (serviceId) {
      case SERVICE_TYPE.VIDEO_PRODUCTION:
        return SECTION_TITLES.VIDEO_PRODUCTION_SERVICE
      case SERVICE_TYPE['2D_ANIMATION']:
        return SECTION_TITLES.TWO_D_ANIMATION_SERVICE
      case SERVICE_TYPE['3D_ANIMATION']:
        return SECTION_TITLES.THREE_D_ANIMATION_SERVICE
    }
  }

  const getServiceDescription = (services: any) =>
    services.find((service: any) =>
      service.serviceType === serviceId)?.detailedInfoDescription

  return (
    <div>
      <Head>
        {/* @ts-ignore */}
        <title>Parsec Studio | {getSectionTitleByService(serviceId).title}</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <div id="mobile-prevent" className="d-xl-none d-flex justify-content-center align-items-center flex-column">
          <img src="/logo-mini.svg" width={120} height={100} alt="Parsec Studio Logo" />
          <p>Responsive version of our website will be soon, we are sorry.</p>
          <p>Please use wider screen.</p>
        </div>
        <Container fluid className="px-0 d-xl-block d-none">
          <Context.Provider value={{
            [CONTEXT_KEYS.PAGE]: [SECTION_NUMBER.CASES, () => { }],
            [CONTEXT_KEYS.SANITY_DATA]: [{
              awsMedia,
              services,
              projects,
            }, () => { }]
          }}>
            <Page
              id="services"
              // @ts-ignore
              sectionTitle={getSectionTitleByService(serviceId)}
              background={SECTION_BACKGROUND.WHITE}              
              >
              <div className="back-to-home">
                <Link href="/"><FontAwesomeIcon size='lg' icon={faChevronLeft} /></Link>
              </div>  
              <ServiceDescription description={getServiceDescription(services)} />
              <Cases />
            </Page>
          </Context.Provider>
        </Container>
      </main>
    </div>
  )
}

export default Service